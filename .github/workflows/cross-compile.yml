name: Build and Publish PHP Extension

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build-and-upload:
    name: Build and upload
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          # Windows x64 - PHP8.3
          - build: x86_64-pc-windows-msvc
            os: windows-2019
            target: x86_64-pc-windows-msvc
            php-versions: '8.3'
            
          # Windows x64 - PHP8.4
          - build: x86_64-pc-windows-msvc
            os: windows-2022
            target: x86_64-pc-windows-msvc
            php-versions: '8.4'
          
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install Rust (MacOS and Linux)
        if: ${{ !startsWith(matrix.os, 'windows-') }}
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.target }}
      
      - name: Install Rust (Windows)
        if: startsWith(matrix.os, 'windows-')
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}

      - name: Build (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cargo install cross
          export CROSS_CONFIG=./Cross_php-${{ matrix.php-versions }}.toml
          cross build --release --target ${{ matrix.target }}
      
      - name: Build Extension
        if: matrix.os != 'ubuntu-latest'
        run: cargo build --release --target ${{ matrix.target }}

      - name: Build archive
        shell: bash
        run: |
          # Replace with the name of your binary
          binary_name="libsql_php"

          str_version=${{ env.VERSION }}
          version=${str_version#turso-php-extension/}

          dirname="$binary_name-$version-php-${{ matrix.php-versions }}-${{ matrix.target }}"
          mkdir "$dirname"

          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            cp "target/${{ matrix.target }}/release/lib${binary_name}.dylib" "target/${{ matrix.target }}/release/lib${binary_name}.so"
            mv "target/${{ matrix.target }}/release/lib${binary_name}.dylib" "$dirname" 
            mv "target/${{ matrix.target }}/release/lib${binary_name}.so" "$dirname"
            mv "libsql_php_extension.stubs.php" "$dirname"
          elif [ ${{ startsWith(matrix.os, 'windows-') }} ]; then
            mv "target/${{ matrix.target }}/release/${binary_name}.dll" "$dirname"
            mv "libsql_php_extension.stubs.php" "$dirname"
            ls "target/${{ matrix.target }}/release"
          else
            mv "target/${{ matrix.target }}/release/lib${binary_name}.so" "$dirname"
            mv "libsql_php_extension.stubs.php" "$dirname"
          fi

          if [ ${{ startsWith(matrix.os, 'windows-') }} ]; then
            7z a "$dirname.zip" "$dirname"
            echo "ASSET=$dirname.zip" >> $GITHUB_ENV
          else
            tar -czf "$dirname.tar.gz" "$dirname"
            echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
          fi

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.ASSET }}
